# Black Duck Security Action allows you to integrate Static Analysis Security Testing (SAST) and Software Composition Analysis (SCA) into your CI/CD pipelines.
# For more information about configuring your workflow,
# read our documentation at https://github.com/blackduck-inc/black-duck-security-scan

name: CI Black Duck security scan

on:
  push:
    branches: [ main, master, develop, stage, release ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main, master, develop, stage, release ]
  schedule:
    - cron: '31 7 * * 0'

jobs:
  polaris:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      security-events: write
      actions: read

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.x'
          
      - name: Install dependencies
        run: npm install
        
      - name: Black Duck Security Scan
        uses: blackduck-inc/black-duck-security-scan@v2.3.0
        with:
          ### ---------- POLARIS SCANNING: REQUIRED FIELDS ----------
          polaris_server_url: ${{ vars.POLARIS_SERVER_URL }}
          polaris_access_token: ${{ secrets.POLARIS_ACCESS_TOKEN }}
          polaris_assessment_types: "SCA,SAST"
          polaris_application_name: HVP-GitHub-Demo-${{ github.event.repository.name }}
          polaris_project_name: HVP-GitHub-Demo-${{ github.event.repository.name }}
          polaris_reports_sarif_create: 'true'
          polaris_upload_sarif_report: 'true'
          polaris_prComment_enabled: 'true'
          polaris_prComment_severities: "Critical, High, Medium, Low"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # include_diagnostics: true

#    - name: Save Logs
#      if: always()
#      uses: actions/upload-artifact@v4
#      with:
#        name: bridge-logs
#        path: ${{ github.workspace }}/.bridge
#        include-hidden-files: true
